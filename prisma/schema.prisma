// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  tweets       Tweet[]
  likes        Like[]
  comments     Comment[]
  commentLikes CommentLike[]
}

model Tweet {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  content   String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  likes     Like[]
  comments  Comment[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Comment {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  content      String
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  tweet        Tweet         @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId      Int
  commentLikes CommentLike[]
  parent       Comment?      @relation("ParentChildren", fields: [parentId], references: [id])
  children     Comment[]     @relation("ParentChildren")
  parentId     Int?
}

model CommentLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  comment   Comment  @relation(fields: [commentId], references: [id], onDelete: Cascade)
  commentId Int
}
